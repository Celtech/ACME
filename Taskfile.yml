version: '3'

tasks:
  docker:dev:
    env:
      COMPOSE_TARGET: "dev"
    cmds:
      - cmd: docker compose -p acme -f docker/docker-compose.yml -f docker/docker-compose.dev.yml up --build --force-recreate

  docker:start:
    env:
      COMPOSE_TARGET: ""
    cmds:
      - cmd: docker compose -p acme -f docker/docker-compose.yml -f docker/docker-compose.dev.yml up --build --force-recreate

  docker:build:
    cmds:
      - cmd: docker build --no-cache -t git.rykelabs.com:5050/rykelabs/acme-server:latest -f docker/Dockerfile .
    silent: false

  docker:deploy:
    cmds:
      - cmd: docker buildx rm acme_builder # just in case task was exited early by the user
        ignore_error: true
      - cmd: docker buildx create --name acme_builder --use
      - cmd: docker buildx build --push --platform linux/amd64 -t git.rykelabs.com:5050/rykelabs/acme-server:latest -f docker/Dockerfile .
      - cmd: docker buildx rm acme_builder
        ignore_error: true
    silent: false

  docker:deploy:test:
    cmds:
      - cmd: docker buildx rm acme_builder # just in case task was exited early by the user
        ignore_error: true
      - cmd: docker buildx create --name acme_builder --use
      - cmd: docker buildx build --push --platform linux/amd64 -t timhinz/ssl-testing:latest -f docker/Dockerfile .
      - cmd: docker buildx rm acme_builder
        ignore_error: true
    silent: false

  go:build:
    env:
      CGO_ENABLED: 0
    cmds:
      - go build -ldflags="-s -w" -gcflags=all="-l -B" -o ./build/ssl-certify
    silent: false

  add:user:
    cmds:
      - cmd: docker exec -it rykelabs-acme-app sh -c "/app/baker-acme add {{.CLI_ARGS}}"

  openapi:
    cmds:
      - cmd: swag init --md docs --codeExampleFiles docs/samples
      - cmd: rm docs/docs.go

  test:
    cmds:
      - go test -race $(go list ./... | grep -v /vendor/)
